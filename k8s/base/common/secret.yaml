apiVersion: v1
kind: Secret
metadata:
  name: mbhealth-secret
  namespace: mbhealth
  labels:
    app.kubernetes.io/name: mbhealth
    app.kubernetes.io/component: secret
type: Opaque
stringData:
  # IMPORTANT: These are placeholder values. 
  # In production, use sealed-secrets, external-secrets, or your cloud provider's secret manager
  
  # Application secret key (generate a strong random key for production)
  SECRET_KEY: "change-this-to-a-random-secret-key-at-least-32-chars"
  
  # Database credentials
  DATABASE_USER: "mbhealth"
  DATABASE_PASSWORD: "change-this-password"
  
  # Redis password (if Redis auth is enabled)
  REDIS_PASSWORD: "change-this-redis-password"
  
  # Encryption key for sensitive data
  ENCRYPTION_KEY: "change-this-to-a-32-byte-base64-encoded-key"
---
# API keys secret (separated for better access control)
apiVersion: v1
kind: Secret
metadata:
  name: mbhealth-api-keys
  namespace: mbhealth
  labels:
    app.kubernetes.io/name: mbhealth
    app.kubernetes.io/component: api-keys
type: Opaque
stringData:
  # AI Provider API Keys (optional - only add if needed)
  # OPENAI_API_KEY: "sk-..."
  # ANTHROPIC_API_KEY: "sk-ant-..."
  # GOOGLE_AI_API_KEY: "..."
  # OPENROUTER_API_KEY: "sk-or-..."
  
  # Notification service URLs
  # SMTP_URL: "smtp://user:pass@smtp.example.com:587"
  # DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/..."