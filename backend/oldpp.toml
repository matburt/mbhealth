[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mbhealth-backend"
version = "0.1.0"
description = "MBHealth - A comprehensive health data tracking application backend"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MBHealth Team", email = "team@mbhealth.com"}
]
maintainers = [
    {name = "MBHealth Team", email = "team@mbhealth.com"}
]
keywords = ["health", "tracking", "fastapi", "python", "medical", "data"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.1,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    "sqlalchemy>=2.0.23,<3.0.0",
    "alembic>=1.12.1,<2.0.0",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "psycopg2-binary>=2.9.9,<3.0.0",
    "httpx>=0.25.2,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "openai>=1.3.7,<2.0.0",
    "google-generativeai>=0.3.2,<1.0.0",
    "pandas>=2.1.4,<3.0.0",
    "numpy>=1.25.2,<2.0.0",
    "matplotlib>=3.8.2,<4.0.0",
    "seaborn>=0.13.0,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/mbhealth"
Documentation = "https://mbhealth.readthedocs.io"
Repository = "https://github.com/your-org/mbhealth"
"Bug Tracker" = "https://github.com/your-org/mbhealth/issues"
"Changelog" = "https://github.com/your-org/mbhealth/blob/main/CHANGELOG.md"

[project.scripts]
mbhealth = "app.main:main"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.build.targets.sdist]
include = [
    "/app",
    "/alembic",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "uvicorn", "sqlalchemy", "pydantic"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "passlib.*",
    "psycopg2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.uv.dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "httpx>=0.25.2",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
    "factory-boy>=3.3.0",
    "faker>=19.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.23.0",
]
production = [
    "gunicorn>=21.2.0",
    "uvloop>=0.19.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
] 