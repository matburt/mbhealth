apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: mbhealth
  labels:
    app.kubernetes.io/name: mbhealth-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: mbhealth
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mbhealth-frontend
    app.kubernetes.io/component: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mbhealth-frontend
  namespace: mbhealth
  labels:
    app.kubernetes.io/name: mbhealth-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: mbhealth
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mbhealth-frontend
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mbhealth-frontend
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: mbhealth
    spec:
      serviceAccountName: mbhealth-frontend
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # nginx user
        runAsGroup: 101
        fsGroup: 101
      containers:
        - name: frontend
          image: mbhealth/frontend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          env:
            # These will be injected into the React app at runtime
            - name: VITE_API_URL
              value: "/api/v1"
            - name: VITE_WS_URL
              value: "/ws"
            - name: VITE_APP_NAME
              value: "MBHealth"
            - name: VITE_LOG_LEVEL
              value: "warn"
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            - name: frontend-config
              mountPath: /docker-entrypoint.d/40-inject-env.sh
              subPath: nginx-env-config.sh
              readOnly: true
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: frontend-config
          configMap:
            name: mbhealth-frontend-config
            defaultMode: 0755
---
# ServiceAccount for the frontend
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mbhealth-frontend
  namespace: mbhealth
  labels:
    app.kubernetes.io/name: mbhealth-frontend
    app.kubernetes.io/component: frontend